package quizapplication;

import java.awt.Color;
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;

public class Quiz extends JFrame implements ActionListener{
    String questions[][]=new String[10][5];
    String answers[][]=new String[10][2];
    String Useranswer[][]=new String[10][1];
   
  JLabel qno,question;
  JRadioButton opt1,opt2,opt3,opt4;
  ButtonGroup groupoption;
  JButton Next,submit,lifeline;
  public static int timer=30;
  public static int ans_given=0;
   public static int count=0;
   public static int score=0;
   String name;
    Quiz(String name)
    {
        this.name=name;
         getContentPane().setBackground(Color.WHITE);
         setLayout(null);
ImageIcon i1=new ImageIcon(ClassLoader.getSystemResource("icons/imageimage.jpg"));
//ImageIcon i2=new ImageIcon(ClassLoader.getSystemResource("icons/whatsnext.jpg"));
        JLabel image=new JLabel(i1);
        //JLabel image1=new JLabel(i2);
        image.setBounds(0,0,1000,351);
//        image1.setBounds(500,0,2000,351);
        add(image);
      //  add(image1);
        
      qno=new JLabel();//i will not give value 1 becuase it should be change dyanmicallu
      qno.setBounds(100,400,50,30);
      qno.setFont(new Font("Tahoma",Font.PLAIN,24));
      add(qno);
      
    question=new JLabel();//i will not give value 1 becuase it should be change dyanmicallu
      question.setBounds(150,400,1600,30);
      question.setFont(new Font("Tahoma",Font.PLAIN,21));
      add(question);
      
      questions[0][0] = "Which is used to find and fix bugs in the Java programs.?";
        questions[0][1] = "JVM";
        questions[0][2] = "JDB";
        questions[0][3] = "JDK";
        questions[0][4] = "JRE";

        questions[1][0] = "What is the return type of the hashCode() method in the Object class?";
        questions[1][1] = "int";
        questions[1][2] = "Object";
        questions[1][3] = "long";
        questions[1][4] = "void";

        questions[2][0] = "Which package contains the Random class?";
        questions[2][1] = "java.util package";
        questions[2][2] = "java.lang package";
        questions[2][3] = "java.awt package";
        questions[2][4] = "java.io package";

        questions[3][0] = "An interface with no fields or methods is known as?";
        questions[3][1] = "Runnable Interface";
        questions[3][2] = "Abstract Interface";
        questions[3][3] = "Marker Interface";
        questions[3][4] = "CharSequence Interface";

        questions[4][0] = "In which memory a String is stored, when we create a string using new operator?";
        questions[4][1] = "Stack";
        questions[4][2] = "String memory";
        questions[4][3] = "Random storage space";
        questions[4][4] = "Heap memory";

        questions[5][0] = "Which of the following is a marker interface?";
        questions[5][1] = "Runnable interface";
        questions[5][2] = "Remote interface";
        questions[5][3] = "Readable interface";
        questions[5][4] = "Result interface";

        questions[6][0] = "Which keyword is used for accessing the features of a package?";
        questions[6][1] = "import";
        questions[6][2] = "package";
        questions[6][3] = "extends";
        questions[6][4] = "export";

        questions[7][0] = "In java, jar stands for?";
        questions[7][1] = "Java Archive Runner";
        questions[7][2] = "Java Archive";
        questions[7][3] = "Java Application Resource";
        questions[7][4] = "Java Application Runner";

        questions[8][0] = "Which of the following is a mutable class in java?";
        questions[8][1] = "java.lang.StringBuilder";
        questions[8][2] = "java.lang.Short";
        questions[8][3] = "java.lang.Byte";
        questions[8][4] = "java.lang.String";

        questions[9][0] = "Which of the following option leads to the portability and security of Java?";
        questions[9][1] = "Bytecode is executed by JVM";
        questions[9][2] = "The applet makes the Java code secure and portable";
        questions[9][3] = "Use of exception handling";
        questions[9][4] = "Dynamic binding between objects";
	
        
        answers[0][1] = "JDB";
        answers[1][1] = "int";
        answers[2][1] = "java.util package";
        answers[3][1] = "Marker Interface";
        answers[4][1] = "Heap memory";
        answers[5][1] = "Remote interface";
        answers[6][1] = "import";
        answers[7][1] = "Java Archive";
        answers[8][1] = "java.lang.StringBuilder";
        answers[9][1] = "Bytecode is executed by JVM";
        
opt1 =new JRadioButton();
    opt1.setBounds(170,450,700,30);
    opt1.setBackground(Color.WHITE);
  opt1.setFont(new Font("Dialog",Font.PLAIN,20));
    add(opt1);
    
    
    
    opt2=new JRadioButton();
    opt2.setBounds(170,490,700,30);
    opt2.setBackground(Color.WHITE);
  opt2.setFont(new Font("Dialog",Font.PLAIN,20));
    add(opt2);
    
   opt3=new JRadioButton();
    opt3.setBounds(170,530,700,30);
    opt3.setBackground(Color.WHITE);
  opt3.setFont(new Font("Dialog",Font.PLAIN,20));
    add(opt3);
    
   opt4=new JRadioButton();
    opt4.setBounds(170,570,700,30);
    opt4.setBackground(Color.WHITE);
  opt4.setFont(new Font("Dialog",Font.PLAIN,20));
    add(opt4);
    
    groupoption=new ButtonGroup();
    
    groupoption.add(opt1);
       groupoption.add(opt2);
          groupoption.add(opt3);
             groupoption.add(opt4);
    
            Next=new JButton("Next");
             Next.setBounds(1100,  450,200,40 );
             Next.setBackground(new Color(255,204,0));
             Next.setForeground(Color.WHITE);
             Next.addActionListener(this);
             Next.setFont(new Font("Tahoma",Font.PLAIN,22));
             add(Next);
             
           lifeline=new JButton("50-50 Lifeline");
             lifeline.setBounds(1100,  530,200,40 );
             lifeline.setBackground(new Color(255,204,0));
            lifeline.setForeground(Color.WHITE);
            lifeline.addActionListener(this);
             lifeline.setFont(new Font("Tahoma",Font.PLAIN,22));
             add(lifeline);
             
              submit=new JButton("submit");
            submit.setBounds(1100,  610,200,40 );
             submit.setBackground(new Color(255,204,0));
           submit.setForeground(Color.WHITE);
           submit.addActionListener(this);
            submit.setFont(new Font("Tahoma",Font.PLAIN,22));
            submit.setEnabled(false);
             add(submit);
             
             start(count);
             
        setSize(1700,790);
        setLocation(0,0);
        setVisible(true);
       
    }
    @Override
    public void actionPerformed(ActionEvent ae)
    {
                    repaint();
                    opt1.setEnabled(true);
               opt2.setEnabled(true);
            opt3.setEnabled(true);
               opt4.setEnabled(true);
        if(ae.getSource()==Next)
        {
            ans_given=1;
             if (groupoption.getSelection()==null)
            {
               Useranswer[count][0]=""; // if no otion selected
            }
            else
            {
               
                Useranswer[count][0]=groupoption.getSelection().getActionCommand();
            }
           if(count==8)
           {
               Next.setEnabled(false);
               submit.setEnabled(true);
           }
            count++;
            start(count);
        }else if(ae.getSource()==lifeline)
        {
            if(count==2||count==4||count==8||count==10)
            {
               opt2.setEnabled(false);
               opt3.setEnabled(false);
            }else
            {
                opt1.setEnabled(false);
               opt4.setEnabled(false);
            }
            lifeline.setEnabled(false);
        } else if (ae.getSource()==submit)
        {
            ans_given=1;
          if (groupoption.getSelection()==null)
            {
               Useranswer[count][0]=""; // if no otion selected
            }
            else
                      
                      
                      for(int i=0;i<Useranswer.length;i++)
                      {
                          if(Useranswer[count][0].equals(answers[i][1]) )
                          {
                              score+=10;
                          }
                      }
                  setVisible(false);
                   new Score(name,score);      
           
        }      
    }
    public void paint(Graphics g)//apne aap call hoga
    {
        super.paint(g);
         
        String time="Time Left - "+timer+ " seconds";//60 this all are graphics
        g.setColor(Color.RED);
        g.setFont(new Font("Tahoma",Font.BOLD,18));
        if(timer>0)
        {
            g.drawString(time, 1100,430);
        }
        else
        {
            g.drawString("Times Up",1100,430);
            
        }
        
        timer--;//14
        // paint method ek hi baar call hoga agr aapko isse obara call krna h to use repaint mrthod
        try{
            Thread.sleep(1000);
            repaint();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        if(ans_given==1)
    {
        ans_given=0;
        timer=30;
    }
        else if ( timer<0)
        {
            timer=30;
            opt1.setEnabled(true);
               opt2.setEnabled(true);
            opt3.setEnabled(true);
               opt4.setEnabled(true);
               
               if(count==8)
           {
               Next.setEnabled(false);
               submit.setEnabled(true);
           }
               if (count==9)// submit button case
               {
                  if (groupoption.getSelection()==null)
            {
               Useranswer[count][0]=""; // if no otion selected
            }
            else
                      
                      
                      for(int i=0;i<Useranswer.length;i++)
                      {
                          if(Useranswer[count][0].equals(answers[i][1]) )
                          {
                              score+=10;
                          }
                      }
                  setVisible(false);
                  new Score(name,score);
             
               }else// next button case
               {
                  if (groupoption.getSelection()==null)
            {
               Useranswer[count][0]=""; // if no otion selected
            }
            else
            {
               
                Useranswer[count][0]=groupoption.getSelection().getActionCommand();
            }
            count++;
            start(count);  
               }
       
           
        
        }
    }
   
    public void start(int count)
    {
        qno.setText(" "+(count+1)+".");//you cannot pass int value in this so you have to convert it into strings
        question.setText(questions[count][0]);
        
        opt1.setText(questions[count][1]);
        opt1.setActionCommand(questions[count][1]);
        
         opt2.setText(questions[count][2]);
            opt2.setActionCommand(questions[count][2]);
          opt3.setText(questions[count][3]);
             opt3.setActionCommand(questions[count][3]);
           opt4.setText(questions[count][4]);
              opt4.setActionCommand(questions[count][4]);
              groupoption.clearSelection();
                      
    }
    public static void main (String[]args)
    {
        new Quiz("user");
    }
    
}
